{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7ad49C2FaC26ca8B7c26b8DcDC0Ce14122Da5e74",
    "txHash": "0xbf5055f912a2d8cff4c64d3d4fb68341dc49e4fa7093ee76b97b9ac3342c0bf7",
    "deployTransaction": {
      "hash": "0xbf5055f912a2d8cff4c64d3d4fb68341dc49e4fa7093ee76b97b9ac3342c0bf7",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xCe74fD5d2aeA626920581C2b444310C2d1a58405",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x12f1bf9cae"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x59682f00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x12f1bf9cae"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xb1b379613116d5645427af83c71383a80d584ba632acaada4b32f675649af3c3",
      "s": "0x07cb9b043df9ac8847e966df76b8efdfd75922bbeb71a5016851327832fc1ca2",
      "v": 1,
      "creates": "0x7ad49C2FaC26ca8B7c26b8DcDC0Ce14122Da5e74",
      "chainId": 1
    }
  },
  "proxies": [
    {
      "address": "0xEec709ab1e5687B5ffe414D1DfBF35C85B78D3DE",
      "txHash": "0xa077ceb010d2c71324ff211efb7919cc77a0fb5eee61e7d588a2c14adc1fc3f9",
      "kind": "transparent"
    },
    {
      "address": "0xB65B8262c4ae0e3a55849f652C2eF614859deBBC",
      "txHash": "0x49e2ea6fb58fbeeb396cc4b59d0248bd08e784d2527d8f6fafa8cd100dceaf98",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b3fbb81089e16b1dcb4a980e50aa2448c68f0a2e2f919759cb46a1cf2fc6eb50": {
      "address": "0xd670aEdE2213b87B8e4AFfA2085D1277DEE5878a",
      "txHash": "0xe7c87ddea390280570d9a7e7429b20f09eebacbf230d2b4ea4bc192570f2e177",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "_styleTokenIds",
            "type": "t_struct(Counter)2106_storage",
            "src": "contracts/SpliceStyleNFT.sol:89"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "isStyleMinter",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/SpliceStyleNFT.sol:91"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "styleSettings",
            "type": "t_mapping(t_uint32,t_struct(StyleSettings)10939_storage)",
            "src": "contracts/SpliceStyleNFT.sol:92"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "allowlists",
            "type": "t_mapping(t_uint32,t_struct(Allowlist)10912_storage)",
            "src": "contracts/SpliceStyleNFT.sol:93"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "mintsAlreadyAllowed",
            "type": "t_mapping(t_uint32,t_mapping(t_address,t_uint8))",
            "src": "contracts/SpliceStyleNFT.sol:96"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "_partnerships",
            "type": "t_mapping(t_uint32,t_struct(Partnership)10921_storage)",
            "src": "contracts/SpliceStyleNFT.sol:101"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "ARTIST_SHARE",
            "type": "t_uint16",
            "src": "contracts/SpliceStyleNFT.sol:103"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "spliceNFT",
            "type": "t_contract(Splice)9487",
            "src": "contracts/SpliceStyleNFT.sol:105"
          },
          {
            "contract": "SpliceStyleNFT",
            "label": "paymentSplitterController",
            "type": "t_contract(PaymentSplitterController)8134",
            "src": "contracts/SpliceStyleNFT.sol:107"
          }
        ],
        "types": {
          "t_struct(Counter)2106_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint32,t_struct(StyleSettings)10939_storage)": {
            "label": "mapping(uint32 => struct StyleSettings)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(StyleSettings)10939_storage": {
            "label": "struct StyleSettings",
            "members": [
              {
                "label": "mintedOfStyle",
                "type": "t_uint32"
              },
              {
                "label": "cap",
                "type": "t_uint32"
              },
              {
                "label": "priceStrategy",
                "type": "t_contract(ISplicePriceStrategy)7855"
              },
              {
                "label": "salesIsActive",
                "type": "t_bool"
              },
              {
                "label": "isFrozen",
                "type": "t_bool"
              },
              {
                "label": "styleCID",
                "type": "t_string_storage"
              },
              {
                "label": "maxInputs",
                "type": "t_uint8"
              },
              {
                "label": "paymentSplitter",
                "type": "t_address"
              }
            ]
          },
          "t_contract(ISplicePriceStrategy)7855": {
            "label": "contract ISplicePriceStrategy"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint32,t_struct(Allowlist)10912_storage)": {
            "label": "mapping(uint32 => struct Allowlist)"
          },
          "t_struct(Allowlist)10912_storage": {
            "label": "struct Allowlist",
            "members": [
              {
                "label": "numReserved",
                "type": "t_uint32"
              },
              {
                "label": "reservedUntil",
                "type": "t_uint64"
              },
              {
                "label": "mintsPerAddress",
                "type": "t_uint8"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint32,t_mapping(t_address,t_uint8))": {
            "label": "mapping(uint32 => mapping(address => uint8))"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_mapping(t_uint32,t_struct(Partnership)10921_storage)": {
            "label": "mapping(uint32 => struct Partnership)"
          },
          "t_struct(Partnership)10921_storage": {
            "label": "struct Partnership",
            "members": [
              {
                "label": "collections",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "until",
                "type": "t_uint64"
              },
              {
                "label": "exclusive",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_contract(Splice)9487": {
            "label": "contract Splice"
          },
          "t_contract(PaymentSplitterController)8134": {
            "label": "contract PaymentSplitterController"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8649f0a19a967a8078be510894286058b32e2eb68735178f139bb448ea47b529": {
      "address": "0xeCdAe7A16c39fDAB7AC72054d669e13Ba60689b4",
      "txHash": "0xf344c6927c7cb09df18f8fdfcc706e411b8de0d212b47c2aa5d0ca0a4456bc16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "PaymentSplitterController",
            "label": "splitters",
            "type": "t_mapping(t_uint256,t_contract(ReplaceablePaymentSplitter)8773)",
            "src": "contracts/PaymentSplitterController.sol:38"
          },
          {
            "contract": "PaymentSplitterController",
            "label": "PAYMENT_TOKENS",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PaymentSplitterController.sol:40"
          },
          {
            "contract": "PaymentSplitterController",
            "label": "_splitterTemplate",
            "type": "t_address",
            "src": "contracts/PaymentSplitterController.sol:45"
          },
          {
            "contract": "PaymentSplitterController",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/PaymentSplitterController.sol:47"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_contract(ReplaceablePaymentSplitter)8773)": {
            "label": "mapping(uint256 => contract ReplaceablePaymentSplitter)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ReplaceablePaymentSplitter)8773": {
            "label": "contract ReplaceablePaymentSplitter"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3d486cf6afadd3b842d01b6159498b35d9b8c83997bc7fbe432a8f18939ac9e8": {
      "address": "0xB6D9BA151BcdD9169c8Ccd07DB63F306AA4a5b8E",
      "txHash": "0x854eeb25f9a2f474fbc935ea9385388bd0ae6ae8351ffa51ae8bfbf239a6ec9e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Splice",
            "label": "ROYALTY_PERCENT",
            "type": "t_uint8",
            "src": "contracts/Splice.sol:66"
          },
          {
            "contract": "Splice",
            "label": "baseUri",
            "type": "t_string_storage",
            "src": "contracts/Splice.sol:68"
          },
          {
            "contract": "Splice",
            "label": "provenanceToTokenId",
            "type": "t_mapping(t_bytes32,t_uint64)",
            "src": "contracts/Splice.sol:72"
          },
          {
            "contract": "Splice",
            "label": "styleNFT",
            "type": "t_contract(SpliceStyleNFT)10900",
            "src": "contracts/Splice.sol:79"
          },
          {
            "contract": "Splice",
            "label": "platformBeneficiary",
            "type": "t_address",
            "src": "contracts/Splice.sol:84"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_uint64)": {
            "label": "mapping(bytes32 => uint64)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_contract(SpliceStyleNFT)10900": {
            "label": "contract SpliceStyleNFT"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
