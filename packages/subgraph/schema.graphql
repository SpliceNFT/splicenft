type Splice @entity(immutable: true) {
  id: ID!
  owner: Bytes # address
  origin_hash: Bytes
  input_params: Bytes
  metadata_url: String
  origin: Origin!
  minting_fee: BigInt
  style: Style!
}

type Origin @entity(immutable: false) {
  id: ID!
  splices: [Splice!]! @derivedFrom(field: "origin")
  seeds: [SeedOrigin!] @derivedFrom(field: "origin")
}

type Seed @entity(immutable: true) {
  id: ID!
  collection: Bytes #address
  token_id: BigInt
  metadata_url: String
  origins: [SeedOrigin!] @derivedFrom(field: "seed")
}

type SeedOrigin @entity(immutable: true) {
  id: ID!
  seed: Seed!
  origin: Origin!
}

type Style @entity(immutable: false) {
  id: ID!
  owner: Bytes!
  cap: Int
  metadata_url: String
  minted: Int
  splices: [Splice!]! @derivedFrom(field: "style")
  split: PaymentSplit
  priceStrategy: Bytes!
  frozen: Boolean
}

type PaymentSplit @entity(immutable: false)  {
  id: ID!
  payees: [String!]!
  style: Style!
  balance: BigInt!
  payments: [Payment!]! @derivedFrom(field: "splitter")
}

type Payment @entity(immutable: true) {
  id: ID!
  tx: Bytes
  from: Bytes
  time: BigInt
  amount: BigInt
  splitter: PaymentSplit! 
}

# type Balance @entity {
#   id: ID!
#   address: Bytes
#   amount: BigInt
# }
